!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("axios"),require("validator"),require("winston"),require("winston-transport"),require("mailparser"),require("fs"),require("path")):"function"==typeof define&&define.amd?define(["exports","axios","validator","winston","winston-transport","mailparser","fs","path"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["applause-reporter-common"]={},t.axios,t.Validator,t.winston,t.TransportStream,t.mailparser,t.fs,t.path)}(this,(function(t,e,s,i,r,a,n,o){"use strict";function l(t){var e=Object.create(null);return t&&Object.keys(t).forEach((function(s){if("default"!==s){var i=Object.getOwnPropertyDescriptor(t,s);Object.defineProperty(e,s,i.get?i:{enumerable:!0,get:function(){return t[s]}})}})),e.default=t,Object.freeze(e)}var u=l(i);const p=s.default,d={autoApiBaseUrl:"https://prod-auto-api.cloud.applause.com/"};function c(t){if(!Number.isInteger(t.productId)||t.productId<=0)throw new Error(`productId must be a positive integer, was: '${t.productId}'`);if(!p.isURL(t.autoApiBaseUrl,{protocols:["http","https"],require_tld:!1,allow_query_components:!1,disallow_auth:!0,allow_fragments:!1,allow_protocol_relative_urls:!1,allow_trailing_dot:!1,require_host:!0,require_protocol:!0}))throw new Error(`autoApiBaseUrl is not valid HTTP/HTTPS URL, was: ${t.autoApiBaseUrl}`);if(p.isEmpty(t.apiKey))throw new Error("apiKey is an empty string!")}const h=Symbol.for("message"),g=u.format.printf((({level:t,message:e,label:s,timestamp:i})=>`${i} [${s}] ${t}: ${e}`));function E(){return u.createLogger({format:u.format.combine(u.format.label({label:"Applause Tests"}),u.format.timestamp(),u.format.splat(),g),transports:[new u.transports.File({filename:"error.log",level:"error"}),new u.transports.File({filename:"combined.log"}),new f,new u.transports.Console({level:"info",format:u.format.combine(u.format.colorize(),g)})]})}class I{logs=[];getLogs(){return this.logs}drainLogs(){const t=this.logs;return this.clearLogs(),t}clearLogs(){this.logs=[]}addLog(t){this.logs.push(t)}}const R=new I;class f extends r{constructor(t){super(t)}log(t,e){setImmediate((()=>{this.emit("logged",t)})),this.format?.transform(t),R.addLog(t[h]??t.message),e()}}class A{options;client;logger;callsInFlight;get getCallsInFlight(){return this.callsInFlight}constructor(t,s){this.options=t,this.callsInFlight=0,this.logger=s??E(),c(t),this.client=e.create({baseURL:t.autoApiBaseUrl,timeout:1e4,headers:{"X-Api-Key":t.apiKey,"Context-Type":"application/json"},responseType:"json"}),this.client.interceptors.response.use((function(t){return t}),(t=>{const e=void 0!==t.response?.data?JSON.stringify(t.response.data):`error-code [${t.response?.status}] with error [${t.response?.statusText}]`;return this.logger.error(`Auto-Api returned ${e}`),Promise.reject(t)}))}async startTestRun(t){this.callsInFlight+=1;try{return await this.client.post("/api/v1.0/test-run/create",{...t,sdkVersion:"js:1.1.0",productId:this.options.productId,itwTestCycleId:this.options.applauseTestCycleId,testRailReportingEnabled:void 0!==this.options.testRailOptions,addAllTestsToPlan:this.options.testRailOptions?.addAllTestsToPlan,testRailProjectId:this.options.testRailOptions?.projectId,testRailSuiteId:this.options.testRailOptions?.suiteId,testRailPlanName:this.options.testRailOptions?.planName,testRailRunName:this.options.testRailOptions?.runName,overrideTestRailRunNameUniqueness:this.options.testRailOptions?.overrideTestRailRunUniqueness})}finally{this.callsInFlight-=1}}async endTestRun(t){this.callsInFlight+=1;try{return await this.client.delete(`/api/v1.0/test-run/${t}?endingStatus=COMPLETE`)}finally{this.callsInFlight-=1}}async startTestCase(t){this.callsInFlight+=1;try{return await this.client.post("/api/v1.0/test-result/create-result",t)}finally{this.callsInFlight-=1}}async submitTestCaseResult(t){this.callsInFlight+=1;try{await this.client.post("/api/v1.0/test-result",t)}finally{this.callsInFlight-=1}}async getProviderSessionLinks(t){this.callsInFlight+=1;try{const e=t.filter((t=>t));return await this.client.post("/api/v1.0/test-result/provider-info",e)}finally{this.callsInFlight-=1}}async sendSdkHeartbeat(t){this.callsInFlight+=1;try{return await this.client.post("/api/v2.0/sdk-heartbeat",{testRunId:t})}finally{this.callsInFlight-=1}}async getEmailAddress(t){this.callsInFlight+=1;try{return await this.client.get(`/api/v1.0/email/get-address?prefix=${t}`)}finally{this.callsInFlight-=1}}async getEmailContent(t){this.callsInFlight+=1;try{return await this.client.post("/api/v1.0/email/download-email",t)}finally{this.callsInFlight-=1}}async uploadAsset(t,e,s,i,r){this.callsInFlight+=1;try{return await this.client.postForm(`/api/v1.0/test-result/${t}/upload`,{file:e,assetName:s,providerSessionGuid:i,assetType:r})}finally{this.callsInFlight-=1}}}var m,w;t.TestResultStatus=void 0,(m=t.TestResultStatus||(t.TestResultStatus={})).NOT_RUN="NOT_RUN",m.IN_PROGRESS="IN_PROGRESS",m.PASSED="PASSED",m.FAILED="FAILED",m.SKIPPED="SKIPPED",m.CANCELED="CANCELED",m.ERROR="ERROR",t.AssetType=void 0,(w=t.AssetType||(t.AssetType={})).SCREENSHOT="SCREENSHOT",w.FAILURE_SCREENSHOT="FAILURE_SCREENSHOT",w.VIDEO="VIDEO",w.NETWORK_HAR="NETWORK_HAR",w.VITALS_LOG="VITALS_LOG",w.CONSOLE_LOG="CONSOLE_LOG",w.NETWORK_LOG="NETWORK_LOG",w.DEVICE_LOG="DEVICE_LOG",w.SELENIUM_LOG="SELENIUM_LOG",w.SELENIUM_LOG_JSON="SELENIUM_LOG_JSON",w.BROWSER_LOG="BROWSER_LOG",w.FRAMEWORK_LOG="FRAMEWORK_LOG",w.EMAIL="EMAIL",w.PAGE_SOURCE="PAGE_SOURCE",w.CODE_BUNDLE="CODE_BUNDLE",w.RESULTS_ZIP="RESULTS_ZIP",w.SESSION_DETAILS="SESSION_DETAILS",w.DEVICE_DETAILS="DEVICE_DETAILS",w.UNKNOWN="UNKNOWN";class S{emailAddress;autoApi;constructor(t,e){this.emailAddress=t,this.autoApi=e}async getEmail(){const t=await this.autoApi.getEmailContent({emailAddress:this.emailAddress});return await a.simpleParser(t.data)}}class T{testRunId;autoApi;enabled=!1;nextHeartbeat;logger;constructor(t,e,s){this.testRunId=t,this.autoApi=e,this.logger=s??E()}async start(){await this.end(),this.enabled=!0,this.scheduleNextHeartbeat()}isEnabled(){return this.enabled}scheduleNextHeartbeat(){this.enabled&&(this.nextHeartbeat=new Promise((t=>setTimeout(t,5e3))).then((()=>this.sendHeartbeat())))}async sendHeartbeat(){this.logger.debug("Sending heartbeat"),await this.autoApi.sendSdkHeartbeat(this.testRunId),this.logger.debug("Heartbeat sent"),this.scheduleNextHeartbeat()}async end(){void 0!==this.nextHeartbeat&&(this.enabled=!1,this.logger.debug("Ending Applause SDK Heartbeat"),await this.nextHeartbeat,this.logger.debug("Applause SDK Heartbeat Ended Successfully")),this.nextHeartbeat=void 0}}const y="TestRail-",b="Applause-";function O(t,e){const s=t.match(/(TestRail-\d+|Applause-\d+)/g),i=s?.filter((t=>t.startsWith(y))).map((t=>t.substring(9)))??[],r=s?.filter((t=>t.startsWith(b))).map((t=>t.substring(9)))??[];return i.length>1&&(e??console).warn("Multiple TestRail case ids detected in testCase name"),r.length>1&&(e??console).warn("Multiple Applause case ids detected in testCase name"),{applauseTestCaseId:r[0],testRailTestCaseId:i[0],testCaseName:t.replace(/(TestRail-\d+|Applause-\d+)/g,"").replace(/\s+/g," ").trim()}}class v{autoApi;logger;constructor(t,e){this.autoApi=t,this.logger=e??E()}async initializeRun(t){const e=t?.map((t=>O(t,this.logger))).map((t=>t.testCaseName.trim())),s=await this.autoApi.startTestRun({tests:e??[]});if(s.status<200||s.status>300)throw this.logger.error(`Failed to create Applause Test Run: received error response with status ${s.status}.`),new Error("Unable to create test run");const i=s.data.runId;this.logger.info(`Test Run ${i} initialized`);const r=new T(i,this.autoApi,this.logger);return await r.start(),new C(this.autoApi,i,r,this.logger)}}class C{autoApi;testRunId;heartbeatService;uidToResultIdMap={};resultSubmissionMap={};logger;constructor(t,e,s,i){this.autoApi=t,this.testRunId=e,this.heartbeatService=s,this.logger=i??E()}startTestCase(t,e,s){if(!e)throw this.logger.error("testCaseName is required"),new Error("testCaseName is required");const i=O(e,this.logger),r=this.autoApi.startTestCase({testCaseName:i.testCaseName,testCaseId:i.testRailTestCaseId,itwTestCaseId:i.applauseTestCaseId,testRunId:this.testRunId,...Object.fromEntries(Object.entries(s||{}).filter((t=>void 0!==t[1])))}).then((t=>t.data.testResultId));return this.uidToResultIdMap[t]=r,r}submitTestCaseResult(t,e,s){const i=this.uidToResultIdMap[t]?.then((t=>this.autoApi.submitTestCaseResult({status:e,testResultId:t,...s}).then((()=>t))));return this.resultSubmissionMap[t]=i,i}async attachTestCaseAsset(t,e,s,i,r){await(this.uidToResultIdMap[t]?.then((t=>this.autoApi.uploadAsset(t,r,e,s,i))))}async runnerEnd(){const t=await Promise.all(Object.values(this.uidToResultIdMap))??[];await Promise.all(Object.values(this.resultSubmissionMap)),await(this.heartbeatService?.end()),await this.autoApi.endTestRun(this.testRunId);const e=(await this.autoApi.getProviderSessionLinks(t)).data??[];if(e.length>0){this.logger.info(JSON.stringify(e));const t=".";n.writeFileSync(o.join(t,"providerUrls.txt"),JSON.stringify(e,null,1))}}}var _;t.TestRunAutoResultStatus=void 0,(_=t.TestRunAutoResultStatus||(t.TestRunAutoResultStatus={})).PASSED="PASSED",_.FAILED="FAILED",_.SKIPPED="SKIPPED",_.CANCELED="CANCELED",_.ERROR="ERROR";const L=s.default,N={publicApiBaseUrl:"https://api.applause.com/"};function F(t){if(!Number.isInteger(t.productId)||t.productId<=0)throw new Error(`productId must be a positive integer, was: '${t.productId}'`);if(!L.isURL(t.publicApiBaseUrl,{protocols:["http","https"],require_tld:!1,allow_query_components:!1,disallow_auth:!0,allow_fragments:!1,allow_protocol_relative_urls:!1,allow_trailing_dot:!1,require_host:!0,require_protocol:!0}))throw new Error(`publicApiBaseUrl is not valid HTTP/HTTPS URL, was: ${t.publicApiBaseUrl}`);if(L.isEmpty(t.apiKey))throw new Error("apiKey is an empty string!")}function P(t,e){return Object.assign({},t,Object.fromEntries(Object.entries(e??{}).filter((t=>void 0!==t[1]))))}function U(t){return function(t){return void 0!==t.autoApiBaseUrl&&void 0!==t.apiKey&&void 0!==t.productId}(t)&&function(t){return void 0!==t.publicApiBaseUrl&&void 0!==t.apiKey&&void 0!==t.productId}(t)}function D(t){const e=t??`${process.cwd()}/applause.json`;if(!n.existsSync(e))return{};const s=n.readFileSync(e,"utf8");return JSON.parse(s)}function H(t){c(t),F(t)}t.APPLAUSE_CASE_ID_PREFIX=b,t.APPLAUSE_LOG_RECORDS=R,t.ApplauseReporter=class{autoApi;initializer;logger;reporter;runStarted=!1;runFinished=!1;constructor(t,e){this.logger=e??E(),this.autoApi=new A(t,this.logger),this.initializer=new v(this.autoApi,this.logger);const s=process.env.APPLAUSE_RUN_ID;if(void 0!==s){const t=new C(this.autoApi,parseInt(s),void 0,this.logger);this.reporter=new Promise((e=>e(t))),this.runStarted=!0}}async runnerStart(t){if(void 0!==this.reporter)throw this.logger.error("Cannot start a run - run already started or run already finished"),new Error("Cannot start a run - run already started or run already finished");this.reporter=this.initializer.initializeRun(t);const e=await this.reporter;return this.runStarted=!0,process.env.APPLAUSE_RUN_ID=e.testRunId.toString(),e.testRunId}async startTestCase(t,e,s){if(void 0===this.reporter)throw this.logger.error("Cannot start a test case for a run that was never initialized"),new Error("Cannot start a test case for a run that was never initialized");return(await this.reporter).startTestCase(t,e,s)}async submitTestCaseResult(t,e,s){if(void 0===this.reporter)throw this.logger.error("Cannot submit test case result for a run that was never initialized"),new Error("Cannot submit test case result for a run that was never initialized");return(await this.reporter).submitTestCaseResult(t,e,s)}async runnerEnd(){if(void 0===this.reporter)throw this.logger.error("Cannot end a run that was never initialized"),new Error("Cannot end a run that was never initialized");await this.reporter.then((t=>t.runnerEnd())).then((()=>this.runFinished=!0))}async attachTestCaseAsset(t,e,s,i,r){if(void 0===this.reporter)throw this.logger.error("Cannot attach an asset for a run that was never initialized"),new Error("Cannot attach an asset for a run that was never initialized");return await this.reporter.then((a=>a.attachTestCaseAsset(t,e,s,i,r)))}isSynchronized(){return(!this.runStarted||this.runStarted&&this.runFinished)&&0==this.autoApi.getCallsInFlight}},t.ApplauseTransport=f,t.AutoApi=A,t.EmailHelper=class{autoApi;constructor(t){this.autoApi=t}async getInbox(t){const e=(await this.autoApi.getEmailAddress(t)).data.emailAddress;return new S(e,this.autoApi)}},t.Inbox=S,t.LoggingContainer=I,t.PublicApi=class{options;client;callsInFlight;logger;get getCallsInFlight(){return this.callsInFlight}constructor(t,s){this.options=t,this.callsInFlight=0,this.logger=s??E(),F(t),this.client=e.create({baseURL:t.publicApiBaseUrl,timeout:1e4,headers:{"X-Api-Key":t.apiKey,"Context-Type":"application/json"},responseType:"json"}),this.client.interceptors.response.use((function(t){return t}),(t=>{const e=void 0!==t.response?.data?JSON.stringify(t.response.data):`error-code [${t.response?.status}] with error [${t.response?.statusText}]`;return this.logger.error(`Public-Api returned ${e}`),Promise.reject(t)}))}async submitResult(t,e){this.callsInFlight+=1;try{return await this.client.post(`v2/test-case-results/${t}/submit`,e)}finally{this.callsInFlight-=1}}},t.RunInitializer=v,t.RunReporter=C,t.TEST_RAIL_CASE_ID_PREFIX=y,t.TestRunHeartbeatService=T,t.WINSTON_DEFAULT_LOG_FORMAT=g,t.constructDefaultLogger=E,t.isComplete=U,t.loadConfig=function(t){let e={...N,...d};if(e=void 0!==t&&void 0!==t.configFile?P(e,D(o.join(process.cwd(),t.configFile))):P(e,D()),void 0!==t&&void 0!==t.properties&&(e=P(e,t.properties)),!U(e))throw new Error("Config is not complete");const s=e;return H(s),s},t.loadConfigFromFile=D,t.overrideConfig=P,t.parseTestCaseName=O,t.validateConfig=H,t.validatePartialConfig=function(t){if(void 0!==t.productId&&(!Number.isInteger(t.productId)||t.productId<=0))throw new Error(`productId must be a positive integer, was: '${t.productId}'`)}}));
//# sourceMappingURL=index.min.js.map
