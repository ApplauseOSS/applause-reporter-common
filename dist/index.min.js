!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("axios"),require("validator"),require("fs"),require("path")):"function"==typeof define&&define.amd?define(["exports","axios","validator","fs","path"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self)["applause-reporter-common"]={},t.axios,t.Validator,t.fs,t.path)}(this,(function(t,e,s,i,a){"use strict";const n=s.default;class r{options;client;callsInFlight;get getCallsInFlight(){return this.callsInFlight}constructor(t){this.options=t,this.callsInFlight=0,l(t),this.client=o(t.clientConfig)?t.clientConfig:e.create({baseURL:t.clientConfig.baseUrl,timeout:1e4,headers:{"X-Api-Key":t.clientConfig.apiKey,"Context-Type":"application/json"},responseType:"json"})}async startTestRun(t){this.callsInFlight+=1;try{return await this.client.post("/api/v1.0/test-run/create",{...t,sdkVersion:"js:1.0.0",productId:this.options.productId,testRailReportingEnabled:void 0!==this.options.testRailOptions,addAllTestsToPlan:this.options.testRailOptions?.addAllTestsToPlan,testRailProjectId:this.options.testRailOptions?.projectId,testRailSuiteId:this.options.testRailOptions?.suiteId,testRailPlanName:this.options.testRailOptions?.planName,testRailRunName:this.options.testRailOptions?.runName,overrideTestRailRunNameUniqueness:this.options.testRailOptions?.overrideTestRailRunUniqueness})}finally{this.callsInFlight-=1}}async endTestRun(t){this.callsInFlight+=1;try{return await this.client.delete(`/api/v3.0/driver-session/${t}?sessionStatus=COMPLETE`)}finally{this.callsInFlight-=1}}async startTestCase(t){this.callsInFlight+=1;try{return await this.client.post("/api/v1.0/test-result/create-result",t)}finally{this.callsInFlight-=1}}async submitTestCaseResult(t){this.callsInFlight+=1;try{await this.client.post("/api/v1.0/test-result",t)}finally{this.callsInFlight-=1}}async getProviderSessionLinks(t){this.callsInFlight+=1;try{const e=t.filter((t=>t));return await this.client.post("/api/v1.0/test-result/provider-info",e)}finally{this.callsInFlight-=1}}async sendSdkHeartbeat(t){this.callsInFlight+=1;try{return await this.client.post(`/api/v2.0/sdk-heartbeat?testRunId=${t}`)}finally{this.callsInFlight-=1}}}const o=t=>void 0!==t.request,l=(...t)=>{if(!Number.isInteger(t[0].productId)||t[0].productId<=0)throw new Error(`productId must be a positive integer, was: '${t[0].productId}'`);if(!o(t[0].clientConfig)){if(!n.isURL(t[0].clientConfig.baseUrl,{protocols:["http","https"],require_tld:!1,require_host:!0,require_protocol:!0}))throw new Error(`baseUrl is not valid HTTP/HTTPS URL, was: ${t[0].clientConfig.baseUrl}`);if(n.isEmpty(t[0].clientConfig.apiKey))throw new Error("apiKey is an empty string!")}};var u;t.TestResultStatus=void 0,(u=t.TestResultStatus||(t.TestResultStatus={})).NOT_RUN="NOT_RUN",u.IN_PROGRESS="IN_PROGRESS",u.PASSED="PASSED",u.FAILED="FAILED",u.SKIPPED="SKIPPED",u.CANCELED="CANCELED",u.ERROR="ERROR";class h{testRunId;autoApi;enabled=!1;nextHeartbeat;constructor(t,e){this.testRunId=t,this.autoApi=e}async start(){await this.end(),this.enabled=!0,this.scheduleNextHeartbeat()}isEnabled(){return this.enabled}scheduleNextHeartbeat(){this.enabled&&(this.nextHeartbeat=new Promise((t=>setTimeout(t,5e3))).then((()=>this.sendHeartbeat())))}async sendHeartbeat(){console.log("Sending heartbeat"),await this.autoApi.sendSdkHeartbeat(this.testRunId),console.log("Heartbeat sent"),this.scheduleNextHeartbeat()}async end(){void 0!==this.nextHeartbeat&&(this.enabled=!1,console.debug("Ending Applause SDK Heartbeat"),await this.nextHeartbeat,console.debug("Applause SDK Heartbeat Ended Successfully")),this.nextHeartbeat=void 0}}class d{autoApi;constructor(t){this.autoApi=t}async initializeRun(t){const e=await this.autoApi.startTestRun({tests:t||[]});if(e.status<200||e.status>300)throw new Error("Unable to create test run");const s=e.data.runId;console.log("Test Run %d initialized",s);const i=new h(s,this.autoApi);return await i.start(),new p(this.autoApi,s,i)}}class p{autoApi;testRunId;heartbeatService;TEST_RAIL_CASE_ID_PREFIX="TestRail-";APPLAUSE_CASE_ID_PREFIX="Applause-";uidToResultIdMap={};resultSubmissionMap={};constructor(t,e,s){this.autoApi=t,this.testRunId=e,this.heartbeatService=s}startTestCase(t,e){const s=this.parseTestCaseName(e);this.uidToResultIdMap[t]=this.autoApi.startTestCase({testCaseName:s.testCaseName,testCaseId:s.testRailTestCaseId,testRunId:this.testRunId,providerSessionIds:[]}).then((t=>t.data.testResultId))}submitTestCaseResult(t,e,s){this.resultSubmissionMap[t]=this.uidToResultIdMap[t]?.then((t=>this.autoApi.submitTestCaseResult({status:e,testResultId:t,failureReason:s})))}parseTestCaseName(t){const e=t.split(" ");let s,i;return e.forEach((t=>{t?.startsWith(this.TEST_RAIL_CASE_ID_PREFIX)?(void 0!==s&&console.warn("Multiple TestRail case ids detected in testCase name"),s=t.substring(this.TEST_RAIL_CASE_ID_PREFIX.length)):t?.startsWith(this.APPLAUSE_CASE_ID_PREFIX)&&(void 0!==i&&console.warn("Multiple Applause case ids detected in testCase name"),i=t.substring(this.APPLAUSE_CASE_ID_PREFIX.length))})),{applauseTestCaseId:i,testRailTestCaseId:s,testCaseName:e.filter((t=>t!==`${this.TEST_RAIL_CASE_ID_PREFIX}${s||""}`)).filter((t=>t!==`${this.APPLAUSE_CASE_ID_PREFIX}${i||""}`)).join(" ")}}async runnerEnd(){const t=await Promise.all(Object.values(this.uidToResultIdMap))||[];await Promise.all(Object.values(this.resultSubmissionMap)),await this.heartbeatService.end(),await this.autoApi.endTestRun(this.testRunId);const e=(await this.autoApi.getProviderSessionLinks(t)).data||[];if(e.length>0){console.info(JSON.stringify(e));const t=".";i.writeFileSync(a.join(t,"providerUrls.txt"),JSON.stringify(e,null,1))}}}t.ApplauseReporter=class{autoApi;initializer;reporter;constructor(t){this.autoApi=new r(t),this.initializer=new d(this.autoApi)}runnerStart(t){this.reporter=this.initializer.initializeRun(t)}startTestCase(t,e){if(void 0===this.reporter)throw new Error("Cannot start a test case for a run that was never initialized");this.reporter.then((s=>s.startTestCase(t,e)))}submitTestCaseResult(t,e,s){if(void 0===this.reporter)throw new Error("Cannot submit test case result for a run that was never initialized");this.reporter.then((i=>i.submitTestCaseResult(t,e,s)))}async runnerEnd(){if(void 0===this.reporter)throw new Error("Cannot end a run that was never initialized");await this.reporter.then((t=>t.runnerEnd()))}},t.AutoApi=r,t.TestRunHeartbeatService=h,t._validateCtorParams=l}));
//# sourceMappingURL=index.min.js.map
