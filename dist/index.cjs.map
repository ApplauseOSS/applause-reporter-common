{"version":3,"file":"index.cjs","sources":["../src/auto-api/version.ts","../src/auto-api/auto-api-config.ts","../src/auto-api/auto-api.ts","../src/auto-api/dto.ts","../src/auto-api/email/inbox.ts","../src/auto-api/email-helper.ts","../src/auto-api/heartbeat.ts","../src/auto-api/reporter.ts","../src/public-api/dto.ts","../src/public-api/public-api-config.ts","../src/public-api/public-api.ts","../src/config/config.ts"],"sourcesContent":["export const API_VERSION = '1.0.0';\n//# sourceMappingURL=version.js.map","import Validator from 'validator';\nconst validator = Validator.default;\nexport const DEFAULT_URL = 'https://prod-auto-api.cloud.applause.com/';\nexport const DEFAULT_AUTO_API_PROPERTIES = {\n    autoApiBaseUrl: DEFAULT_URL,\n};\nexport function isAutoApiConfigComplete(config) {\n    return (config.autoApiBaseUrl !== undefined &&\n        config.apiKey !== undefined &&\n        config.productId !== undefined);\n}\nexport function validatePartialAutoApiConfig(config) {\n    if (config.productId !== undefined &&\n        (!Number.isInteger(config.productId) || config.productId <= 0)) {\n        throw new Error(`productId must be a positive integer, was: '${config.productId}'`);\n    }\n}\nexport function validateAutoApiConfig(config) {\n    if (!Number.isInteger(config.productId) || config.productId <= 0) {\n        throw new Error(`productId must be a positive integer, was: '${config.productId}'`);\n    }\n    if (!validator.isURL(config.autoApiBaseUrl, {\n        protocols: ['http', 'https'],\n        require_tld: false,\n        allow_query_components: false,\n        disallow_auth: true,\n        allow_fragments: false,\n        allow_protocol_relative_urls: false,\n        allow_trailing_dot: false,\n        require_host: true,\n        require_protocol: true,\n    })) {\n        throw new Error(`autoApiBaseUrl is not valid HTTP/HTTPS URL, was: ${config.autoApiBaseUrl}`);\n    }\n    if (validator.isEmpty(config.apiKey)) {\n        throw new Error('apiKey is an empty string!');\n    }\n}\n//# sourceMappingURL=auto-api-config.js.map","import axios from 'axios';\nimport { API_VERSION } from './version.ts';\nimport { validateAutoApiConfig } from './auto-api-config.ts';\nexport class AutoApi {\n    options;\n    client;\n    callsInFlight;\n    /**\n     * tracks number of HTTP calls in progress, used by reporters that want to know when our async work is finished\n     */\n    get getCallsInFlight() {\n        return this.callsInFlight;\n    }\n    constructor(options) {\n        this.options = options;\n        this.callsInFlight = 0;\n        validateAutoApiConfig(options);\n        this.client = axios.create({\n            baseURL: options.autoApiBaseUrl,\n            timeout: 10000,\n            headers: {\n                'X-Api-Key': options.apiKey,\n                'Context-Type': 'application/json',\n            },\n            responseType: 'json',\n        });\n        this.client.interceptors.response.use(function (response) {\n            return response;\n        }, function (error) {\n            // log and rethrow\n            const errText = \n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            error.data !== undefined\n                ? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    error.data\n                : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    `error-code [${error.response.status}] with error [${error.response.statusText}]`;\n            console.error(`Auto-Api returned ${errText}`);\n            return Promise.reject(error);\n        });\n    }\n    async startTestRun(info) {\n        this.callsInFlight += 1;\n        try {\n            return await this.client.post('/api/v1.0/test-run/create', {\n                // Provided params\n                ...info,\n                // API Version\n                sdkVersion: `js:${API_VERSION}`,\n                // Copy over the product id\n                productId: this.options.productId,\n                // Copy over test rail parameters\n                testRailReportingEnabled: this.options.testRailOptions !== undefined,\n                addAllTestsToPlan: this.options.testRailOptions?.addAllTestsToPlan,\n                testRailProjectId: this.options.testRailOptions?.projectId,\n                testRailSuiteId: this.options.testRailOptions?.suiteId,\n                testRailPlanName: this.options.testRailOptions?.planName,\n                testRailRunName: this.options.testRailOptions?.runName,\n                overrideTestRailRunNameUniqueness: this.options.testRailOptions?.overrideTestRailRunUniqueness,\n            });\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n    async endTestRun(testRunId) {\n        this.callsInFlight += 1;\n        try {\n            return await this.client.delete(`/api/v1.0/test-run/${testRunId}?endingStatus=COMPLETE`);\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n    async startTestCase(params) {\n        this.callsInFlight += 1;\n        try {\n            const res = await this.client.post('/api/v1.0/test-result/create-result', params);\n            return res;\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n    async submitTestCaseResult(params) {\n        this.callsInFlight += 1;\n        try {\n            await this.client.post('/api/v1.0/test-result', params);\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n    async getProviderSessionLinks(resultIds) {\n        this.callsInFlight += 1;\n        try {\n            // this filters out falsy values (null, undefined, 0)\n            const validIds = resultIds.filter(id => id);\n            return await this.client.post('/api/v1.0/test-result/provider-info', validIds);\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n    async sendSdkHeartbeat(testRunId) {\n        this.callsInFlight += 1;\n        try {\n            // this filters out falsy values (null, undefined, 0)\n            return await this.client.post('/api/v2.0/sdk-heartbeat', {\n                testRunId: testRunId,\n            });\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n    async getEmailAddress(emailPrefix) {\n        this.callsInFlight += 1;\n        try {\n            // this filters out falsy values (null, undefined, 0)\n            return await this.client.get(`/api/v1.0/email/get-address?prefix=${emailPrefix}`);\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n    async getEmailContent(request) {\n        this.callsInFlight += 1;\n        try {\n            // this filters out falsy values (null, undefined, 0)\n            return await this.client.post('/api/v1.0/email/download-email', request);\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n}\n//# sourceMappingURL=auto-api.js.map","/**\n * Enum representing a test result's status\n */\nexport var TestResultStatus;\n(function (TestResultStatus) {\n    TestResultStatus[\"NOT_RUN\"] = \"NOT_RUN\";\n    TestResultStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n    TestResultStatus[\"PASSED\"] = \"PASSED\";\n    TestResultStatus[\"FAILED\"] = \"FAILED\";\n    TestResultStatus[\"SKIPPED\"] = \"SKIPPED\";\n    TestResultStatus[\"CANCELED\"] = \"CANCELED\";\n    TestResultStatus[\"ERROR\"] = \"ERROR\";\n})(TestResultStatus || (TestResultStatus = {}));\n//# sourceMappingURL=dto.js.map","import { simpleParser } from 'mailparser';\nexport class Inbox {\n    emailAddress;\n    autoApi;\n    constructor(emailAddress, autoApi) {\n        this.emailAddress = emailAddress;\n        this.autoApi = autoApi;\n    }\n    async getEmail() {\n        const res = await this.autoApi.getEmailContent({\n            emailAddress: this.emailAddress,\n        });\n        return await simpleParser(res.data);\n    }\n}\n//# sourceMappingURL=inbox.js.map","import { Inbox } from './email/inbox.ts';\nexport class EmailHelper {\n    autoApi;\n    constructor(autoApi) {\n        this.autoApi = autoApi;\n    }\n    async getInbox(emailPrefix) {\n        const generatedAddress = (await this.autoApi.getEmailAddress(emailPrefix)).data.emailAddress;\n        return new Inbox(generatedAddress, this.autoApi);\n    }\n}\nexport * from './email/attachment.ts';\nexport * from './email/inbox.ts';\n//# sourceMappingURL=email-helper.js.map","export class TestRunHeartbeatService {\n    testRunId;\n    autoApi;\n    enabled = false;\n    nextHeartbeat;\n    constructor(testRunId, autoApi) {\n        this.testRunId = testRunId;\n        this.autoApi = autoApi;\n    }\n    async start() {\n        // End the current heartbeat if it has started\n        await this.end();\n        // Set up va new interval\n        this.enabled = true;\n        this.scheduleNextHeartbeat();\n    }\n    isEnabled() {\n        return this.enabled;\n    }\n    scheduleNextHeartbeat() {\n        if (!this.enabled) {\n            return;\n        }\n        this.nextHeartbeat = new Promise(resolve => setTimeout(resolve, 5000)).then(() => this.sendHeartbeat());\n    }\n    async sendHeartbeat() {\n        console.log('Sending heartbeat');\n        await this.autoApi.sendSdkHeartbeat(this.testRunId);\n        console.log('Heartbeat sent');\n        this.scheduleNextHeartbeat();\n    }\n    async end() {\n        if (this.nextHeartbeat !== undefined) {\n            this.enabled = false;\n            console.debug('Ending Applause SDK Heartbeat');\n            await this.nextHeartbeat;\n            console.debug('Applause SDK Heartbeat Ended Successfully');\n        }\n        this.nextHeartbeat = undefined;\n    }\n}\n//# sourceMappingURL=heartbeat.js.map","import { writeFileSync } from 'fs';\nimport { AutoApi } from './auto-api.ts';\nimport { TestRunHeartbeatService } from './heartbeat.ts';\nimport { join as pathJoin } from 'path';\nexport class ApplauseReporter {\n    autoApi;\n    initializer;\n    reporter;\n    runStarted = false;\n    runFinished = false;\n    constructor(config) {\n        this.autoApi = new AutoApi(config);\n        this.initializer = new RunInitializer(this.autoApi);\n    }\n    runnerStart(tests) {\n        this.reporter = this.initializer.initializeRun(tests);\n        void this.reporter.then(() => {\n            this.runStarted = true;\n        });\n    }\n    startTestCase(id, testCaseName, params) {\n        if (this.reporter === undefined) {\n            throw new Error('Cannot start a test case for a run that was never initialized');\n        }\n        void this.reporter.then(reporter => reporter.startTestCase(id, testCaseName, params));\n    }\n    submitTestCaseResult(id, status, params) {\n        if (this.reporter === undefined) {\n            throw new Error('Cannot submit test case result for a run that was never initialized');\n        }\n        void this.reporter.then(reporter => reporter.submitTestCaseResult(id, status, params));\n    }\n    async runnerEnd() {\n        if (this.reporter === undefined) {\n            throw new Error('Cannot end a run that was never initialized');\n        }\n        await this.reporter\n            .then(reporter => reporter.runnerEnd())\n            .then(() => (this.runFinished = true));\n    }\n    isSynchronized() {\n        // Verify the run is not yet started or it has ended, and all calls made to the applause api have finished\n        return ((!this.runStarted || (this.runStarted && this.runFinished)) &&\n            this.autoApi.getCallsInFlight == 0);\n    }\n}\nexport class RunInitializer {\n    autoApi;\n    constructor(autoApi) {\n        this.autoApi = autoApi;\n    }\n    async initializeRun(tests) {\n        const cleanedTests = tests\n            ?.map(parseTestCaseName)\n            .map(parsed => parsed.testCaseName.trim());\n        const testRunCreateResponse = await this.autoApi.startTestRun({\n            tests: cleanedTests || [],\n        });\n        if (testRunCreateResponse.status < 200 ||\n            testRunCreateResponse.status > 300) {\n            throw new Error('Unable to create test run');\n        }\n        const runId = testRunCreateResponse.data.runId;\n        console.log('Test Run %d initialized', runId);\n        const heartbeatService = new TestRunHeartbeatService(runId, this.autoApi);\n        await heartbeatService.start();\n        return new RunReporter(this.autoApi, runId, heartbeatService);\n    }\n}\nexport class RunReporter {\n    autoApi;\n    testRunId;\n    heartbeatService;\n    uidToResultIdMap = {};\n    resultSubmissionMap = {};\n    constructor(autoApi, testRunId, heartbeatService) {\n        this.autoApi = autoApi;\n        this.testRunId = testRunId;\n        this.heartbeatService = heartbeatService;\n    }\n    startTestCase(id, testCaseName, params) {\n        const parsedTestCase = parseTestCaseName(testCaseName);\n        this.uidToResultIdMap[id] = this.autoApi\n            .startTestCase({\n            testCaseName: parsedTestCase.testCaseName,\n            testCaseId: parsedTestCase.testRailTestCaseId,\n            itwTestCaseId: parsedTestCase.applauseTestCaseId,\n            testRunId: this.testRunId,\n            // If the additional params provides either test case id, it will override the parsed value we set above\n            ...Object.fromEntries(Object.entries(params || {}).filter(([_, v]) => v !== undefined)),\n        })\n            .then(res => {\n            return res.data.testResultId;\n        });\n    }\n    submitTestCaseResult(id, status, params) {\n        this.resultSubmissionMap[id] = this.uidToResultIdMap[id]?.then(resultId => this.autoApi.submitTestCaseResult({\n            status: status,\n            testResultId: resultId,\n            ...params,\n        }));\n    }\n    async runnerEnd() {\n        // Wait for all results to be created\n        const resultIds = (await Promise.all(Object.values(this.uidToResultIdMap))) || [];\n        // Wait for the results to be submitted\n        void (await Promise.all(Object.values(this.resultSubmissionMap)));\n        // Wait the heartbeat to be ended\n        void (await this.heartbeatService.end());\n        void (await this.autoApi.endTestRun(this.testRunId));\n        // Fetch the provider session asset links and save them off to a file\n        const resp = await this.autoApi.getProviderSessionLinks(resultIds);\n        const jsonArray = resp.data || [];\n        if (jsonArray.length > 0) {\n            console.info(JSON.stringify(jsonArray));\n            // this is the wdio.conf outputDir\n            const outputPath = '.';\n            writeFileSync(pathJoin(outputPath, 'providerUrls.txt'), JSON.stringify(jsonArray, null, 1));\n        }\n    }\n}\nexport const TEST_RAIL_CASE_ID_PREFIX = 'TestRail-';\nexport const APPLAUSE_CASE_ID_PREFIX = 'Applause-';\nexport function parseTestCaseName(testCaseName) {\n    // Split the name on spaces. We will reassemble after parsing out the other ids\n    const tokens = testCaseName.split(' ');\n    let testRailTestCaseId;\n    let applauseTestCaseId;\n    tokens.forEach(token => {\n        if (token?.startsWith(TEST_RAIL_CASE_ID_PREFIX)) {\n            if (testRailTestCaseId !== undefined) {\n                console.warn('Multiple TestRail case ids detected in testCase name');\n            }\n            testRailTestCaseId = token.substring(TEST_RAIL_CASE_ID_PREFIX.length);\n        }\n        else if (token?.startsWith(APPLAUSE_CASE_ID_PREFIX)) {\n            if (applauseTestCaseId !== undefined) {\n                console.warn('Multiple Applause case ids detected in testCase name');\n            }\n            applauseTestCaseId = token.substring(APPLAUSE_CASE_ID_PREFIX.length);\n        }\n    });\n    return {\n        applauseTestCaseId,\n        testRailTestCaseId,\n        testCaseName: tokens\n            .filter(token => token !== `${TEST_RAIL_CASE_ID_PREFIX}${testRailTestCaseId || ''}`)\n            .filter(token => token !== `${APPLAUSE_CASE_ID_PREFIX}${applauseTestCaseId || ''}`)\n            .join(' ')\n            .trim(),\n    };\n}\n//# sourceMappingURL=reporter.js.map","export var TestRunAutoResultStatus;\n(function (TestRunAutoResultStatus) {\n    TestRunAutoResultStatus[\"PASSED\"] = \"PASSED\";\n    TestRunAutoResultStatus[\"FAILED\"] = \"FAILED\";\n    TestRunAutoResultStatus[\"SKIPPED\"] = \"SKIPPED\";\n    TestRunAutoResultStatus[\"CANCELED\"] = \"CANCELED\";\n    TestRunAutoResultStatus[\"ERROR\"] = \"ERROR\";\n})(TestRunAutoResultStatus || (TestRunAutoResultStatus = {}));\n//# sourceMappingURL=dto.js.map","import Validator from 'validator';\nconst validator = Validator.default;\nexport const DEFAULT_URL = 'https://api.applause.com/';\nexport const DEFAULT_PUBLIC_API_PROPERTIES = {\n    publicApiBaseUrl: DEFAULT_URL,\n};\nexport function isPublicApiConfigComplete(config) {\n    return (config.publicApiBaseUrl !== undefined &&\n        config.apiKey !== undefined &&\n        config.productId !== undefined);\n}\nexport function validatePartialPublicApiConfig(config) {\n    if (config.productId !== undefined &&\n        (!Number.isInteger(config.productId) || config.productId <= 0)) {\n        throw new Error(`productId must be a positive integer, was: '${config.productId}'`);\n    }\n}\nexport function validatePublicApiConfig(config) {\n    if (!Number.isInteger(config.productId) || config.productId <= 0) {\n        throw new Error(`productId must be a positive integer, was: '${config.productId}'`);\n    }\n    if (!validator.isURL(config.publicApiBaseUrl, {\n        protocols: ['http', 'https'],\n        require_tld: false,\n        allow_query_components: false,\n        disallow_auth: true,\n        allow_fragments: false,\n        allow_protocol_relative_urls: false,\n        allow_trailing_dot: false,\n        require_host: true,\n        require_protocol: true,\n    })) {\n        throw new Error(`publicApiBaseUrl is not valid HTTP/HTTPS URL, was: ${config.publicApiBaseUrl}`);\n    }\n    if (validator.isEmpty(config.apiKey)) {\n        throw new Error('apiKey is an empty string!');\n    }\n}\n//# sourceMappingURL=public-api-config.js.map","import axios from 'axios';\nimport { validatePublicApiConfig, } from './public-api-config.ts';\nexport class PublicApi {\n    options;\n    client;\n    callsInFlight;\n    /**\n     * tracks number of HTTP calls in progress, used by reporters that want to know when our async work is finished\n     */\n    get getCallsInFlight() {\n        return this.callsInFlight;\n    }\n    constructor(options) {\n        this.options = options;\n        this.callsInFlight = 0;\n        validatePublicApiConfig(options);\n        this.client = axios.create({\n            baseURL: options.publicApiBaseUrl,\n            timeout: 10000,\n            headers: {\n                'X-Api-Key': options.apiKey,\n                'Context-Type': 'application/json',\n            },\n            responseType: 'json',\n        });\n        this.client.interceptors.response.use(function (response) {\n            return response;\n        }, function (error) {\n            // log and rethrow\n            const errText = \n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            error.data !== undefined\n                ? // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    error.data\n                : // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n                    `error-code [${error.response.status}] with error [${error.response.statusText}]`;\n            console.error(`Public-Api returned ${errText}`);\n            return Promise.reject(error);\n        });\n    }\n    async submitResult(testCaseId, info) {\n        this.callsInFlight += 1;\n        try {\n            return await this.client.post(`v2/test-case-results/${testCaseId}/submit`, info);\n        }\n        finally {\n            this.callsInFlight -= 1;\n        }\n    }\n}\n//# sourceMappingURL=public-api.js.map","import { existsSync, readFileSync } from 'fs';\nimport path from 'path';\nimport { DEFAULT_AUTO_API_PROPERTIES, isAutoApiConfigComplete, validateAutoApiConfig, } from '../auto-api/auto-api-config.ts';\nimport { DEFAULT_PUBLIC_API_PROPERTIES, isPublicApiConfigComplete, validatePublicApiConfig, } from '../public-api/public-api-config.ts';\n// Loads the configuration\nexport function loadConfig(loadOptions) {\n    // Setup the initial config with any default properties\n    let config = {\n        ...DEFAULT_PUBLIC_API_PROPERTIES,\n        ...DEFAULT_AUTO_API_PROPERTIES,\n    };\n    // Load properties from the provided config file\n    if (loadOptions !== undefined && loadOptions.configFile !== undefined) {\n        config = overrideConfig(config, loadConfigFromFile(path.join(process.cwd(), loadOptions.configFile)));\n    }\n    else {\n        // Override from the default config file\n        config = overrideConfig(config, loadConfigFromFile());\n    }\n    // Then load in the file override properties\n    if (loadOptions !== undefined && loadOptions.properties !== undefined) {\n        config = overrideConfig(config, loadOptions.properties);\n    }\n    if (!isComplete(config)) {\n        throw new Error('Config is not complete');\n    }\n    // We know that the config is complete, so we can cast\n    const finalConfig = config;\n    validateConfig(finalConfig);\n    return finalConfig;\n}\nexport function overrideConfig(config, overrides) {\n    return Object.assign({}, config, Object.fromEntries(Object.entries(overrides || {}).filter(([_, v]) => v !== undefined)));\n}\nexport function isComplete(config) {\n    return isAutoApiConfigComplete(config) && isPublicApiConfigComplete(config);\n}\nexport function loadConfigFromFile(configFile) {\n    const configFilePath = configFile || process.cwd() + '/applause.json';\n    if (!existsSync(configFilePath)) {\n        return {};\n    }\n    const fileCotents = readFileSync(configFilePath, 'utf8');\n    return JSON.parse(fileCotents);\n}\nexport function validateConfig(config) {\n    validateAutoApiConfig(config);\n    validatePublicApiConfig(config);\n}\nexport function validatePartialConfig(config) {\n    if (config.productId !== undefined &&\n        (!Number.isInteger(config.productId) || config.productId <= 0)) {\n        throw new Error(`productId must be a positive integer, was: '${config.productId}'`);\n    }\n}\n//# sourceMappingURL=config.js.map"],"names":["validator","DEFAULT_URL","TestResultStatus","simpleParser","writeFileSync","pathJoin","TestRunAutoResultStatus","existsSync","readFileSync"],"mappings":"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"}