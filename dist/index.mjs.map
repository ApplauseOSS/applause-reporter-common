{"version":3,"file":"index.mjs","sources":["../src/version.ts","../src/dto.ts","../src/index.ts"],"sourcesContent":["export const API_VERSION = '1.0.0';\n","/**\n * DTO used to create a new Applause test run\n */\nexport interface TestRunCreateDto {\n  // Required: a list of test cases to pre-create\n  tests: string[];\n\n  // Optional: an applause test cycle id\n  itwTestCycleId?: number;\n}\n\n/**\n * DTO modeling the response to a test run creation request\n */\nexport interface TestRunCreateResponseDto {\n  // The ID of the Applause Test Run\n  runId: number;\n}\n\n/**\n * DTO used to mark the start of a test result\n */\nexport interface CreateTestResultDto {\n  // ID of the test run to submit this result to\n  testRunId: number;\n\n  // Name of the Test Case\n  testCaseName: string;\n\n  // A collection of provider session guids\n  providerSessionIds: string[];\n\n  // Optional: TestRail Test Case Id\n  testCaseId?: string;\n\n  // Optional: Applause Test Case Id\n  itwTestCaseId?: string;\n}\n\n/**\n * DTO response to a test result creation request\n */\nexport interface CreateTestResultResponseDto {\n  testResultId: number;\n}\n\n/**\n * DTO used to submit a status to an in progress test result.\n */\nexport interface SubmitTestResultDto {\n  // The id of the test result\n  testResultId: number;\n\n  // An optional testrail test case id\n  testRailCaseId?: number;\n\n  // An optional applause test case id\n  itwCaseId?: number;\n\n  // The ending status of the test.\n  status: TestResultStatus;\n\n  // An optional reason why the test failed.\n  failureReason?: string;\n}\n\n/**\n * Enum representing a test result's status\n */\nexport enum TestResultStatus {\n  NOT_RUN = 'NOT_RUN',\n  IN_PROGRESS = 'IN_PROGRESS',\n  PASSED = 'PASSED',\n  FAILED = 'FAILED',\n  SKIPPED = 'SKIPPED',\n  CANCELED = 'CANCELED',\n  ERROR = 'ERROR',\n}\n\n/**\n * DTO representing test result info that is provided at the end of a test run\n */\nexport interface TestResultProviderInfo {\n  testResultId: number;\n  providerUrl: string;\n  providerSessionId: string;\n}\n\n/**\n * DTO representing TestRail settings. The presence of this info signals that test rail reporting is enabled\n */\nexport interface TestRailOptions {\n  projectId: number;\n  suiteId: number;\n  planName: string;\n  runName: string;\n  addAllTestsToPlan?: boolean;\n  overrideTestRailRunUniqueness?: boolean;\n}\n","import axios, { AxiosInstance, AxiosResponse } from 'axios';\nimport {\n  CreateTestResultDto,\n  CreateTestResultResponseDto,\n  SubmitTestResultDto,\n  TestRailOptions,\n  TestResultProviderInfo,\n  TestRunCreateDto,\n  TestRunCreateResponseDto,\n} from './dto';\nimport validator from 'validator';\nimport { API_VERSION } from './version';\n\nexport type ClientConfig = {\n  readonly baseUrl: string;\n  readonly apiKey: string;\n};\n\nexport class AutoApi {\n  private readonly client: AxiosInstance;\n\n  private callsInFlight: number;\n  /**\n   * tracks number of HTTP calls in progress, used by reporters that want to know when our async work is finished\n   */\n  public get getCallsInFlight(): number {\n    return this.callsInFlight;\n  }\n\n  constructor(\n    readonly options: {\n      readonly clientConfig: ClientConfig | AxiosInstance;\n      readonly productId: number;\n      readonly testRailOptions?: TestRailOptions;\n    }\n  ) {\n    this.callsInFlight = 0;\n    _validateCtorParams(options);\n    this.client = _isAxiosInstance(options.clientConfig)\n      ? options.clientConfig\n      : axios.create({\n          baseURL: options.clientConfig.baseUrl,\n          timeout: 10000,\n          headers: {\n            'X-Api-Key': options.clientConfig.apiKey,\n            'Context-Type': 'application/json',\n          },\n          responseType: 'json',\n        });\n  }\n\n  async startTestRun(\n    info: TestRunCreateDto\n  ): Promise<AxiosResponse<TestRunCreateResponseDto>> {\n    this.callsInFlight += 1;\n    try {\n      return await this.client.post<TestRunCreateResponseDto>(\n        '/api/v1.0/test-run/create',\n        {\n          // Provided params\n          ...info,\n\n          // API Version\n          sdkVersion: `js:${API_VERSION}`,\n\n          // Copy over the product id\n          productId: this.options.productId,\n\n          // Copy over test rail parameters\n          testRailReportingEnabled: this.options.testRailOptions !== undefined,\n          addAllTestsToPlan: this.options.testRailOptions?.addAllTestsToPlan,\n          testRailProjectId: this.options.testRailOptions?.projectId,\n          testRailSuiteId: this.options.testRailOptions?.suiteId,\n          testRailPlanName: this.options.testRailOptions?.planName,\n          testRailRunName: this.options.testRailOptions?.runName,\n          overrideTestRailRunNameUniqueness:\n            this.options.testRailOptions?.overrideTestRailRunUniqueness,\n        }\n      );\n    } finally {\n      this.callsInFlight -= 1;\n    }\n  }\n\n  async endTestRun(testRunId: number): Promise<AxiosResponse<void>> {\n    this.callsInFlight += 1;\n    try {\n      return await this.client.delete<void>(\n        `/api/v3.0/driver-session/${testRunId}?sessionStatus=COMPLETE`\n      );\n    } finally {\n      this.callsInFlight -= 1;\n    }\n  }\n\n  async startTestCase(\n    params: CreateTestResultDto\n  ): Promise<AxiosResponse<CreateTestResultResponseDto>> {\n    this.callsInFlight += 1;\n    try {\n      const res = await this.client.post<CreateTestResultResponseDto>(\n        '/api/v1.0/test-result/create-result',\n        params\n      );\n      return res;\n    } finally {\n      this.callsInFlight -= 1;\n    }\n  }\n\n  async submitTestResult(params: SubmitTestResultDto): Promise<void> {\n    this.callsInFlight += 1;\n    try {\n      await this.client.post('/api/v1.0/test-result', params);\n    } finally {\n      this.callsInFlight -= 1;\n    }\n  }\n\n  async getProviderSessionLinks(\n    resultIds: number[]\n  ): Promise<AxiosResponse<TestResultProviderInfo[]>> {\n    this.callsInFlight += 1;\n    try {\n      // this filters out falsy values (null, undefined, 0)\n      const validIds: number[] = resultIds.filter(id => id);\n      return await this.client.post<TestResultProviderInfo[]>(\n        '/api/v1.0/test-result/provider-info',\n        validIds\n      );\n    } finally {\n      this.callsInFlight -= 1;\n    }\n  }\n\n  async sendSdkHeartbeat(testRunId: number): Promise<AxiosResponse<void>> {\n    this.callsInFlight += 1;\n    try {\n      // this filters out falsy values (null, undefined, 0)\n      return await this.client.post<void>(\n        `/api/v2.0/sdk-heartbeat?testRunId=${testRunId}`\n      );\n    } finally {\n      this.callsInFlight -= 1;\n    }\n  }\n}\n\nexport class TestRunHeartbeatService {\n  private enabled = false;\n  private nextHeartbeat?: Promise<void>;\n\n  constructor(readonly testRunId: number, readonly autoApi: AutoApi) {}\n\n  async start(): Promise<void> {\n    // End the current heartbeat if it has started\n    await this.end();\n\n    // Set up va new interval\n    this.enabled = true;\n    this.scheduleNextHeartbeat();\n  }\n\n  private scheduleNextHeartbeat(): void {\n    if (!this.enabled) {\n      return;\n    }\n    this.nextHeartbeat = new Promise(resolve => setTimeout(resolve, 5000)).then(\n      async () => await this.sendHeartbeat()\n    );\n  }\n\n  private async sendHeartbeat(): Promise<void> {\n    await this.autoApi.sendSdkHeartbeat(this.testRunId);\n    this.scheduleNextHeartbeat();\n  }\n\n  async end(): Promise<void> {\n    if (this.nextHeartbeat !== undefined) {\n      this.enabled = false;\n      console.debug('Ending Applause SDK Heartbeat');\n      await this.nextHeartbeat;\n      console.debug('Applause SDK Heartbeat Ended Successfully');\n    }\n    this.nextHeartbeat = undefined;\n  }\n}\n\n/**\n *\n * @param clientConfig user defined type check to see if we were passed an already built AxoisIntance or regular ClientConfig\n */\nconst _isAxiosInstance = (\n  clientConfig: ClientConfig | AxiosInstance\n): clientConfig is AxiosInstance => {\n  // we check for property \"request\" to see if client config object is an Axois instance or regular ClientConfig\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n  return (clientConfig as AxiosInstance).request !== undefined;\n};\n\n/**\n * Exposed for testing. Don't use this!\n * @private\n *\n * @param params mirrored constructor args from AutoApi class\n */\nexport const _validateCtorParams = (\n  ...params: ConstructorParameters<typeof AutoApi>\n): void => {\n  // product ID sanity\n  if (!Number.isInteger(params[0].productId) || params[0].productId <= 0) {\n    throw new Error(\n      `productId must be a positive integer, was: '${params[0].productId}'`\n    );\n  }\n  // check for specific options if pre-built client wasn't passed\n  if (!_isAxiosInstance(params[0].clientConfig)) {\n    // Base URL sanity\n    if (\n      !validator.isURL(params[0].clientConfig.baseUrl, {\n        protocols: ['http', 'https'],\n        require_tld: false, // allow localhost\n        require_host: true,\n        require_protocol: true,\n      })\n    ) {\n      throw new Error(\n        `baseUrl is not valid HTTP/HTTPS URL, was: ${params[0].clientConfig.baseUrl}`\n      );\n    }\n    // API Key sanity\n    if (validator.isEmpty(params[0].clientConfig.apiKey)) {\n      throw new Error('apiKey is an empty string!');\n    }\n  }\n};\n\n// Re-export DTOs\nexport * from './dto';\n"],"names":[],"mappings":"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"}